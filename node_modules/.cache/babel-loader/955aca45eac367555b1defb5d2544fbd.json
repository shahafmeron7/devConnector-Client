{"ast":null,"code":"var _jsxFileName = \"/Users/shahafm/Desktop/devConnector/client/src/components/profile/ProfileGitHub.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileGitHub = _ref => {\n  _s();\n  let {\n    getGithubRepos,\n    username,\n    repos\n  } = _ref;\n  useEffect(() => {\n    console.log('useeffect repos');\n    getGithubRepos(username);\n  }, [getGithubRepos, username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n};\n_s(ProfileGitHub, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ProfileGitHub;\nProfileGitHub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGitHub);\nvar _c;\n$RefreshReg$(_c, \"ProfileGitHub\");","map":{"version":3,"names":["React","useEffect","PropTypes","connect","getGithubRepos","Spinner","ProfileGitHub","username","repos","console","log","propTypes","func","isRequired","array","string","mapStateToProps","state","profile"],"sources":["/Users/shahafm/Desktop/devConnector/client/src/components/profile/ProfileGitHub.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nconst ProfileGitHub = ({ getGithubRepos, username, repos }) => {\n  useEffect(() => {\n    console.log('useeffect repos');\n    getGithubRepos(username);\n  }, [getGithubRepos, username]);\n  return <div></div>;\n};\n\nProfileGitHub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  repos: state.profile.repos,\n});\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGitHub);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,cAAc,QAAQ,uBAAuB;AACtD,OAAOC,OAAO,MAAM,mBAAmB;AAAC;AACxC,MAAMC,aAAa,GAAG,QAAyC;EAAA;EAAA,IAAxC;IAAEF,cAAc;IAAEG,QAAQ;IAAEC;EAAM,CAAC;EACxDP,SAAS,CAAC,MAAM;IACdQ,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9BN,cAAc,CAACG,QAAQ,CAAC;EAC1B,CAAC,EAAE,CAACH,cAAc,EAAEG,QAAQ,CAAC,CAAC;EAC9B,oBAAO;IAAA;IAAA;IAAA;EAAA,QAAW;AACpB,CAAC;AAAC,GANID,aAAa;AAAA,KAAbA,aAAa;AAQnBA,aAAa,CAACK,SAAS,GAAG;EACxBP,cAAc,EAAEF,SAAS,CAACU,IAAI,CAACC,UAAU;EACzCL,KAAK,EAAEN,SAAS,CAACY,KAAK,CAACD,UAAU;EACjCN,QAAQ,EAAEL,SAAS,CAACa,MAAM,CAACF;AAC7B,CAAC;AACD,MAAMG,eAAe,GAAIC,KAAK,KAAM;EAClCT,KAAK,EAAES,KAAK,CAACC,OAAO,CAACV;AACvB,CAAC,CAAC;AACF,eAAeL,OAAO,CAACa,eAAe,EAAE;EAAEZ;AAAe,CAAC,CAAC,CAACE,aAAa,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module"}