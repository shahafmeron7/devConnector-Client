{"ast":null,"code":"var _jsxFileName = \"/Users/shahafm/Desktop/devConnector/client/src/components/profile/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = _ref => {\n  _s();\n  let {\n    getProfileById,\n    match,\n    profile: {\n      profile,\n      loading\n    },\n    auth\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    getProfileById(id);\n  }, [getProfileById, id]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [console.log(loading), profile === null || loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profiles\",\n        className: \"btn btn-light\",\n        children: \"Back To Profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/edit-profile\",\n        className: \"btn btn-dark\",\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"XT1vicrm+NSYLQxrGm9hA77HN9Y=\", false, function () {\n  return [useParams];\n});\n_c = Profile;\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","Fragment","useEffect","PropTypes","connect","Link","useParams","Spinner","getProfileById","Profile","match","profile","loading","auth","id","console","log","isAuthenticated","user","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"sources":["/Users/shahafm/Desktop/devConnector/client/src/components/profile/Profile.js"],"sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\n\nconst Profile = ({\n  getProfileById,\n  match,\n  profile: { profile, loading },\n  auth,\n}) => {\n  const { id } = useParams();\n  useEffect(() => {\n    getProfileById(id);\n  }, [getProfileById, id]);\n\n  return (\n    <Fragment>\n      {console.log(loading)}\n      {profile === null || loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <Link to=\"/profiles\" className=\"btn btn-light\">\n            Back To Profiles\n          </Link>\n          {auth.isAuthenticated &&\n            auth.loading === false &&\n            auth.user._id === profile.user._id && (\n              <Link to=\"/edit-profile\" className=\"btn btn-dark\">\n                Edit Profile\n              </Link>\n            )}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,cAAc,QAAQ,uBAAuB;AAAC;AAEvD,MAAMC,OAAO,GAAG,QAKV;EAAA;EAAA,IALW;IACfD,cAAc;IACdE,KAAK;IACLC,OAAO,EAAE;MAAEA,OAAO;MAAEC;IAAQ,CAAC;IAC7BC;EACF,CAAC;EACC,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS,EAAE;EAC1BJ,SAAS,CAAC,MAAM;IACdM,cAAc,CAACM,EAAE,CAAC;EACpB,CAAC,EAAE,CAACN,cAAc,EAAEM,EAAE,CAAC,CAAC;EAExB,oBACE,QAAC,QAAQ;IAAA,WACNC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAAC,EACpBD,OAAO,KAAK,IAAI,IAAIC,OAAO,gBAC1B,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG,gBAEX,QAAC,QAAQ;MAAA,wBACP,QAAC,IAAI;QAAC,EAAE,EAAC,WAAW;QAAC,SAAS,EAAC,eAAe;QAAA,UAAC;MAE/C;QAAA;QAAA;QAAA;MAAA,QAAO,EACNC,IAAI,CAACI,eAAe,IACnBJ,IAAI,CAACD,OAAO,KAAK,KAAK,IACtBC,IAAI,CAACK,IAAI,CAACC,GAAG,KAAKR,OAAO,CAACO,IAAI,CAACC,GAAG,iBAChC,QAAC,IAAI;QAAC,EAAE,EAAC,eAAe;QAAC,SAAS,EAAC,cAAc;QAAA,UAAC;MAElD;QAAA;QAAA;QAAA;MAAA,QACD;IAAA;MAAA;MAAA;MAAA;IAAA,QAEN;EAAA;IAAA;IAAA;IAAA;EAAA,QACQ;AAEf,CAAC;AAAC,GAhCIV,OAAO;EAAA,QAMIH,SAAS;AAAA;AAAA,KANpBG,OAAO;AAkCbA,OAAO,CAACW,SAAS,GAAG;EAClBZ,cAAc,EAAEL,SAAS,CAACkB,IAAI,CAACC,UAAU;EACzCX,OAAO,EAAER,SAAS,CAACoB,MAAM,CAACD,UAAU;EACpCT,IAAI,EAAEV,SAAS,CAACoB,MAAM,CAACD;AACzB,CAAC;AACD,MAAME,eAAe,GAAIC,KAAK,KAAM;EAClCd,OAAO,EAAEc,KAAK,CAACd,OAAO;EACtBE,IAAI,EAAEY,KAAK,CAACZ;AACd,CAAC,CAAC;AAEF,eAAeT,OAAO,CAACoB,eAAe,EAAE;EAAEhB;AAAe,CAAC,CAAC,CAACC,OAAO,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module"}