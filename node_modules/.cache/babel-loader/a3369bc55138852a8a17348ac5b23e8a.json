{"ast":null,"code":"var _jsxFileName = \"/Users/shahafm/Desktop/devConnector/client/src/components/profile/ProfileGitHub.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileGitHub = _ref => {\n  _s();\n  let {\n    getGithubRepos,\n    username,\n    repos\n  } = _ref;\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos, username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-github\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-primary my-1\",\n      children: \"Github Repos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), repos === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this) : repos.map(repo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repo bg-white p-1 my-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: repo.html_url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: repo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: repo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"il\", {\n            className: \"badge badge-primary\",\n            children: [\"Stars: \", repo.stargazers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"il\", {\n            className: \"badge badge-dark\",\n            children: [\"Watchers: \", repo.watchers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"il\", {\n            className: \"badge badge-white\",\n            children: [\"Forks: \", repo.forks_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, repo._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileGitHub, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ProfileGitHub;\nProfileGitHub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGitHub);\nvar _c;\n$RefreshReg$(_c, \"ProfileGitHub\");","map":{"version":3,"names":["React","useEffect","PropTypes","connect","getGithubRepos","Spinner","ProfileGitHub","username","repos","map","repo","html_url","name","description","stargazers_count","watchers_count","forks_count","_id","propTypes","func","isRequired","array","string","mapStateToProps","state","profile"],"sources":["/Users/shahafm/Desktop/devConnector/client/src/components/profile/ProfileGitHub.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getGithubRepos } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nconst ProfileGitHub = ({ getGithubRepos, username, repos }) => {\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos, username]);\n  return (\n    <div className=\"profile-github\">\n      <h2 className=\"text-primary my-1\">Github Repos</h2>\n      {repos === null ? (\n        <Spinner />\n      ) : (\n        repos.map((repo) => (\n          <div key={repo._id} className=\"repo bg-white p-1 my-1\">\n            <div>\n              <h4>\n                <a\n                  href={repo.html_url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {repo.name}\n                </a>\n              </h4>\n              <p>{repo.description}</p>\n            </div>\n            <div>\n              <ul>\n                <il className=\"badge badge-primary\">\n                  Stars: {repo.stargazers_count}\n                </il>\n                <il className=\"badge badge-dark\">\n                  Watchers: {repo.watchers_count}\n                </il>\n                <il className=\"badge badge-white\">Forks: {repo.forks_count}</il>\n              </ul>\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n};\n\nProfileGitHub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  repos: state.profile.repos,\n});\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGitHub);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,cAAc,QAAQ,uBAAuB;AACtD,OAAOC,OAAO,MAAM,mBAAmB;AAAC;AACxC,MAAMC,aAAa,GAAG,QAAyC;EAAA;EAAA,IAAxC;IAAEF,cAAc;IAAEG,QAAQ;IAAEC;EAAM,CAAC;EACxDP,SAAS,CAAC,MAAM;IACdG,cAAc,CAACG,QAAQ,CAAC;EAC1B,CAAC,EAAE,CAACH,cAAc,EAAEG,QAAQ,CAAC,CAAC;EAC9B,oBACE;IAAK,SAAS,EAAC,gBAAgB;IAAA,wBAC7B;MAAI,SAAS,EAAC,mBAAmB;MAAA,UAAC;IAAY;MAAA;MAAA;MAAA;IAAA,QAAK,EAClDC,KAAK,KAAK,IAAI,gBACb,QAAC,OAAO;MAAA;MAAA;MAAA;IAAA,QAAG,GAEXA,KAAK,CAACC,GAAG,CAAEC,IAAI,iBACb;MAAoB,SAAS,EAAC,wBAAwB;MAAA,wBACpD;QAAA,wBACE;UAAA,uBACE;YACE,IAAI,EAAEA,IAAI,CAACC,QAAS;YACpB,MAAM,EAAC,QAAQ;YACf,GAAG,EAAC,qBAAqB;YAAA,UAExBD,IAAI,CAACE;UAAI;YAAA;YAAA;YAAA;UAAA;QACR;UAAA;UAAA;UAAA;QAAA,QACD,eACL;UAAA,UAAIF,IAAI,CAACG;QAAW;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QACrB,eACN;QAAA,uBACE;UAAA,wBACE;YAAI,SAAS,EAAC,qBAAqB;YAAA,WAAC,SAC3B,EAACH,IAAI,CAACI,gBAAgB;UAAA;YAAA;YAAA;YAAA;UAAA,QAC1B,eACL;YAAI,SAAS,EAAC,kBAAkB;YAAA,WAAC,YACrB,EAACJ,IAAI,CAACK,cAAc;UAAA;YAAA;YAAA;YAAA;UAAA,QAC3B,eACL;YAAI,SAAS,EAAC,mBAAmB;YAAA,WAAC,SAAO,EAACL,IAAI,CAACM,WAAW;UAAA;YAAA;YAAA;YAAA;UAAA,QAAM;QAAA;UAAA;UAAA;UAAA;QAAA;MAC7D;QAAA;QAAA;QAAA;MAAA,QACD;IAAA,GAvBEN,IAAI,CAACO,GAAG;MAAA;MAAA;MAAA;IAAA,QAyBnB,CACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV,CAAC;AAAC,GAxCIX,aAAa;AAAA,KAAbA,aAAa;AA0CnBA,aAAa,CAACY,SAAS,GAAG;EACxBd,cAAc,EAAEF,SAAS,CAACiB,IAAI,CAACC,UAAU;EACzCZ,KAAK,EAAEN,SAAS,CAACmB,KAAK,CAACD,UAAU;EACjCb,QAAQ,EAAEL,SAAS,CAACoB,MAAM,CAACF;AAC7B,CAAC;AACD,MAAMG,eAAe,GAAIC,KAAK,KAAM;EAClChB,KAAK,EAAEgB,KAAK,CAACC,OAAO,CAACjB;AACvB,CAAC,CAAC;AACF,eAAeL,OAAO,CAACoB,eAAe,EAAE;EAAEnB;AAAe,CAAC,CAAC,CAACE,aAAa,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module"}