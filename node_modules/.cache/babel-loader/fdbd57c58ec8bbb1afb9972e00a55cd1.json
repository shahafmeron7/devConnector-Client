{"ast":null,"code":"var _jsxFileName = \"/Users/shahafm/Desktop/devConnector/client/src/components/profiles/Profiles.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfiles } from '../../actions/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profiles = _ref => {\n  _s();\n  let {\n    getProfiles,\n    profile: {\n      loading,\n      profiles\n    }\n  } = _ref;\n  useEffect(() => {\n    getProfiles();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n};\n_s(Profiles, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Profiles;\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);\nvar _c;\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfiles","Profiles","profile","loading","profiles","propTypes","func","isRequired","object","mapStateToProps","state"],"sources":["/Users/shahafm/Desktop/devConnector/client/src/components/profiles/Profiles.js"],"sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Spinner from '../layout/Spinner';\nimport { getProfiles } from '../../actions/profile';\nconst Profiles = ({ getProfiles, profile: { loading, profiles } }) => {\n  useEffect(() => {\n    getProfiles();\n  }, []);\n  return <div></div>;\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AAErC,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,WAAW,QAAQ,uBAAuB;AAAC;AACpD,MAAMC,QAAQ,GAAG,QAAqD;EAAA;EAAA,IAApD;IAAED,WAAW;IAAEE,OAAO,EAAE;MAAEC,OAAO;MAAEC;IAAS;EAAE,CAAC;EAC/DR,SAAS,CAAC,MAAM;IACdI,WAAW,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EACN,oBAAO;IAAA;IAAA;IAAA;EAAA,QAAW;AACpB,CAAC;AAAC,GALIC,QAAQ;AAAA,KAARA,QAAQ;AAOdA,QAAQ,CAACI,SAAS,GAAG;EACnBL,WAAW,EAAEH,SAAS,CAACS,IAAI,CAACC,UAAU;EACtCL,OAAO,EAAEL,SAAS,CAACW,MAAM,CAACD;AAC5B,CAAC;AACD,MAAME,eAAe,GAAIC,KAAK,KAAM;EAClCR,OAAO,EAAEQ,KAAK,CAACR;AACjB,CAAC,CAAC;AACF,eAAeJ,OAAO,CAACW,eAAe,EAAE;EAAET;AAAY,CAAC,CAAC,CAACC,QAAQ,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module"}