{"ast":null,"code":"import _regeneratorRuntime from\"/Users/shahafm/Desktop/devConnector/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/shahafm/Desktop/devConnector/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _defineProperty from\"/Users/shahafm/Desktop/devConnector/client/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"/Users/shahafm/Desktop/devConnector/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/shahafm/Desktop/devConnector/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{Fragment,useState}from'react';import{Link,Navigate}from'react-router-dom';import{connect}from'react-redux';import{setAlert}from'../../actions/alert';import{register}from'../../actions/auth';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Register=function Register(_ref){var setAlert=_ref.setAlert,register=_ref.register,isAuthenticated=_ref.isAuthenticated;var _useState=useState({name:'',email:'',password:'',password2:''}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var name=formData.name,email=formData.email,password=formData.password,password2=formData.password2;var _onChange=function onChange(e){return setFormData(_objectSpread(_objectSpread({},formData),{},_defineProperty({},e.target.name,e.target.value)));};var _onSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(e){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(password!==password2){setAlert('Passwords do not match','danger');}else{register({name:name,email:email,password:password});}case 2:case\"end\":return _context.stop();}}},_callee);}));return function onSubmit(_x){return _ref2.apply(this,arguments);};}();if(isAuthenticated){return/*#__PURE__*/_jsx(Navigate,{to:\"/dashborad\"});}return/*#__PURE__*/_jsx(\"section\",{className:\"container\",children:/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{className:\"large text-primary\",children:\"Sign Up\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"lead\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-user\"}),\" Create Your Account\"]}),/*#__PURE__*/_jsxs(\"form\",{className:\"form\",onSubmit:function onSubmit(e){return _onSubmit(e);},children:[/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Name\",name:\"name\",value:name,onChange:function onChange(e){return _onChange(e);}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email Address\",name:\"email\",value:email,onChange:function onChange(e){return _onChange(e);}}),/*#__PURE__*/_jsx(\"small\",{className:\"form-text\",children:\"This site uses Gravatar so if you want a profile image, use a Gravatar email\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",name:\"password\",value:password,onChange:function onChange(e){return _onChange(e);}})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Confirm Password\",name:\"password2\",value:password2,onChange:function onChange(e){return _onChange(e);}})}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",className:\"btn btn-primary\",value:\"Register\"})]}),/*#__PURE__*/_jsxs(\"p\",{className:\"my-1\",children:[\"Already have an account? \",/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"Sign In\"})]})]})});};var mapStateToProps=function mapStateToProps(state){return{isAuthenticated:state.auth.isAuthenticated};};export default connect(mapStateToProps,{setAlert:setAlert,register:register})(Register);","map":{"version":3,"names":["React","Fragment","useState","Link","Navigate","connect","setAlert","register","Register","isAuthenticated","name","email","password","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","mapStateToProps","state","auth"],"sources":["/Users/shahafm/Desktop/devConnector/client/src/components/auth/Register.js"],"sourcesContent":["import React, { Fragment, useState } from 'react';\r\nimport { Link, Navigate } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { setAlert } from '../../actions/alert';\r\nimport { register } from '../../actions/auth';\r\nimport PropTypes from 'prop-types';\r\nconst Register = ({ setAlert, register, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: ''\r\n  });\r\n  const { name, email, password, password2 } = formData;\r\n  const onChange = e =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  const onSubmit = async e => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      setAlert('Passwords do not match', 'danger');\r\n    } else {\r\n      register({ name, email, password });\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Navigate to='/dashborad' />;\r\n  }\r\n  return (\r\n    <section className='container'>\r\n      <Fragment>\r\n        <h1 className='large text-primary'>Sign Up</h1>\r\n        <p className='lead'>\r\n          <i className='fas fa-user'></i> Create Your Account\r\n        </p>\r\n        <form className='form' onSubmit={e => onSubmit(e)}>\r\n          <div className='form-group'>\r\n            <input\r\n              type='text'\r\n              placeholder='Name'\r\n              name='name'\r\n              value={name}\r\n              onChange={e => onChange(e)}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='email'\r\n              placeholder='Email Address'\r\n              name='email'\r\n              value={email}\r\n              onChange={e => onChange(e)}\r\n            />\r\n            <small className='form-text'>\r\n              This site uses Gravatar so if you want a profile image, use a\r\n              Gravatar email\r\n            </small>\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='password'\r\n              placeholder='Password'\r\n              name='password'\r\n              value={password}\r\n              onChange={e => onChange(e)}\r\n            />\r\n          </div>\r\n          <div className='form-group'>\r\n            <input\r\n              type='password'\r\n              placeholder='Confirm Password'\r\n              name='password2'\r\n              value={password2}\r\n              onChange={e => onChange(e)}\r\n            />\r\n          </div>\r\n          <input type='submit' className='btn btn-primary' value='Register' />\r\n        </form>\r\n        <p className='my-1'>\r\n          Already have an account? <Link to='/login'>Sign In</Link>\r\n        </p>\r\n      </Fragment>\r\n    </section>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { setAlert, register })(Register);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}