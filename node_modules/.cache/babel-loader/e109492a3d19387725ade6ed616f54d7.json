{"ast":null,"code":"import { ADD_POST, DELETE_POST, GET_POSTS, POST_ERROR, UPDATE_LIKES } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nfunction postReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map(post => post._id === payload.id ? {\n          ...post,\n          likes: payload.likes\n        } : post),\n        loading: false\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [...state.posts, payload],\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\nexport default postReducer;","map":{"version":3,"names":["ADD_POST","DELETE_POST","GET_POSTS","POST_ERROR","UPDATE_LIKES","initialState","posts","post","loading","error","postReducer","state","action","type","payload","map","_id","id","likes","filter"],"sources":["/Users/shahafm/Desktop/devConnector/client/src/reducers/post.js"],"sourcesContent":["import {\n  ADD_POST,\n  DELETE_POST,\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n} from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {},\n};\n\nfunction postReducer(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false,\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\n        ),\n        loading: false,\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== payload),\n        loading: false,\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [...state.posts, payload],\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\nexport default postReducer;\n"],"mappings":"AAAA,SACEA,QAAQ,EACRC,WAAW,EACXC,SAAS,EACTC,UAAU,EACVC,YAAY,QACP,kBAAkB;AACzB,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EAAE;EACTC,IAAI,EAAE,IAAI;EACVC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE,CAAC;AACV,CAAC;AAED,SAASC,WAAW,GAA+B;EAAA,IAA9BC,KAAK,uEAAGN,YAAY;EAAA,IAAEO,MAAM;EAC/C,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAEhC,QAAQC,IAAI;IACV,KAAKX,SAAS;MACZ,OAAO;QACL,GAAGS,KAAK;QACRL,KAAK,EAAEQ,OAAO;QACdN,OAAO,EAAE;MACX,CAAC;IACH,KAAKL,UAAU;MACb,OAAO;QACL,GAAGQ,KAAK;QACRF,KAAK,EAAEK,OAAO;QACdN,OAAO,EAAE;MACX,CAAC;IACH,KAAKJ,YAAY;MACf,OAAO;QACL,GAAGO,KAAK;QACRL,KAAK,EAAEK,KAAK,CAACL,KAAK,CAACS,GAAG,CAAER,IAAI,IAC1BA,IAAI,CAACS,GAAG,KAAKF,OAAO,CAACG,EAAE,GAAG;UAAE,GAAGV,IAAI;UAAEW,KAAK,EAAEJ,OAAO,CAACI;QAAM,CAAC,GAAGX,IAAI,CACnE;QACDC,OAAO,EAAE;MACX,CAAC;IACH,KAAKP,WAAW;MACd,OAAO;QACL,GAAGU,KAAK;QACRL,KAAK,EAAEK,KAAK,CAACL,KAAK,CAACa,MAAM,CAAEZ,IAAI,IAAKA,IAAI,CAACS,GAAG,KAAKF,OAAO,CAAC;QACzDN,OAAO,EAAE;MACX,CAAC;IACH,KAAKR,QAAQ;MACX,OAAO;QACL,GAAGW,KAAK;QACRL,KAAK,EAAE,CAAC,GAAGK,KAAK,CAACL,KAAK,EAAEQ,OAAO,CAAC;QAChCN,OAAO,EAAE;MACX,CAAC;IACH;MACE,OAAOG,KAAK;EAAC;AAEnB;AACA,eAAeD,WAAW"},"metadata":{},"sourceType":"module"}