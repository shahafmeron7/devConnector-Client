{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_FAILED, LOGIN_SUCCESS } from './types';\nimport setAuthToken from '../utils/setAuthToken';\n//Load user\n\nexport const loadUser = () => async dispatch => {\n  console.log('here');\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n//Register\nexport const register = _ref => {\n  let {\n    name,\n    email,\n    password\n  } = _ref;\n  return async dispatch => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      name,\n      email,\n      password\n    });\n    try {\n      const res = await axios.post('/api/users', body, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n    } catch (err) {\n      const errors = err.response.data.errors;\n      console.log(errors);\n      if (errors) {\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n      }\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    }\n  };\n};\n\n//Login\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n  try {\n    const res = await axios.post('/api/auth', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loginUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n    console.log(errors);\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: LOGIN_FAILED\n    });\n  }\n};","map":{"version":3,"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_FAILED","LOGIN_SUCCESS","setAuthToken","loadUser","dispatch","console","log","localStorage","token","res","get","type","payload","data","err","register","name","email","password","config","headers","body","JSON","stringify","post","errors","response","forEach","error","msg","login","loginUser"],"sources":["C:/Users/Ido/Desktop/devConnector/client/src/actions/auth.js"],"sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_FAILED,\r\n  LOGIN_SUCCESS\r\n} from './types';\r\nimport setAuthToken from '../utils/setAuthToken';\r\n//Load user\r\n\r\nexport const loadUser = () => async dispatch => {\r\n  console.log('here');\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get('/api/auth');\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR\r\n    });\r\n  }\r\n};\r\n\r\n//Register\r\nexport const register =\r\n  ({ name, email, password }) =>\r\n  async dispatch => {\r\n    const config = {\r\n      headers: { 'Content-Type': 'application/json' }\r\n    };\r\n    const body = JSON.stringify({ name, email, password });\r\n\r\n    try {\r\n      const res = await axios.post('/api/users', body, config);\r\n\r\n      dispatch({\r\n        type: REGISTER_SUCCESS,\r\n        payload: res.data\r\n      });\r\n    } catch (err) {\r\n      const errors = err.response.data.errors;\r\n      console.log(errors);\r\n      if (errors) {\r\n        errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n      }\r\n      dispatch({\r\n        type: REGISTER_FAIL\r\n      });\r\n    }\r\n  };\r\n\r\n//Login\r\nexport const login = (email, password) => async dispatch => {\r\n  const config = {\r\n    headers: { 'Content-Type': 'application/json' }\r\n  };\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post('/api/auth', body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data\r\n    });\r\n    dispatch(loginUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n    console.log(errors);\r\n    if (errors) {\r\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n    }\r\n    dispatch({\r\n      type: LOGIN_FAILED\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}